<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title >We Test</title>
    <!--<link rel="stylesheet" type="text/css" href="/css/main.css">-->
    <link rel="shortcut icon" href="../favicon.ico" type="image/x-icon">
    <link rel="stylesheet" href="/css/style.css">
    <script src="/js/react.js"></script>
    <script src="/js/react-dom.min.js"></script>
    <script src="/js/browser.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.16.6/lodash.min.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
    <script src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>
    <!--<link rel="stylesheet" type="text/css" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css">-->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">

</head>
<body>
<header>
    <nav class="navbar navbar-default" role="navigation">
        <div class="container">
            <div class="navbar-header">
                <a class="navbar-brand" href="#"><h1>We Test</h1></a>
            </div><!-- navbar-header -->
        </div><!-- container -->
    </nav>
</header>
<div class="main">
    <div class="page" id="petratings">
        <div class="container">
            <div class="row">
                <div class="col-sm-12">
                    <div id="petAppointments"></div>
                    <script type="text/babel">
                        var MainInterface = React.createClass({
                            getInitialState: function() {
                                return {
                                    aptBodyVisible: false,
                                    orderBy: 'title',
                                    orderDir: 'asc',
                                    queryText: '',
                                    myData: []
                                }
                            },
                            componentDidMount: function() {
                                //this.serverRequest = $.get('/json/data.json', function(result) {
                                this.serverRequest = $.get('http://localhost:3000/projects', function(result) {
                                    var tempApts = result;
                                    this.setState({
                                        myData: tempApts
                                    });//setState
                                }.bind(this));

                                this.serverRequest = $.get('http://localhost:3000/projects', function(result) {
                                    var tempApts = result;
                                    console.log('In hanlder of request ... ');
                                    console.log(result);
//                                this.setState({
//                                  myData: tempApts
//                                });//setState
                                }.bind(this));

                            },
                            componentWillUnmount: function () {
                                this.serverRequest.abort();
                            },
                            deleteMessage: function (item) {
                                var allApts = this.state.myData;
                                var newApts = _.without(allApts, item);
                                this.setState({
                                    myData: newApts
                                });
                            },//deleteMessage
                            toggleAddDisplay: function () {
                                var tempVisibility = !this.state.aptBodyVisible;
                                this.setState({
                                    aptBodyVisible: tempVisibility
                                });//setState
                            },//toggleAddDisplay
                            addItem: function (tempItem) {
                                var tempApts = this.state.myData;
                                tempApts.push(tempItem);
                                this.setState({
                                    myData: tempApts
                                });//setState
                            },//addItem

                            reOrder: function (orderBy, orderDir) {
                                this.setState({
                                    orderBy: orderBy,
                                    orderDir: orderDir
                                });//setState
                            },
                            searchApts(q){
                                this.setState({
                                    queryText: q
                                });
                            },//SearchApts

                            render: function() {
//                                        var filteredApts = this.state.myData;
                                var filteredApts = [];
                                var orderBy = this.state.orderBy;
                                var orderDir = this.state.orderDir;
                                var queryText = this.state.queryText;
                                var myData = this.state.myData;

                                myData.forEach(function (item) {
                                    if(
                                      (item.title.toLowerCase().indexOf(queryText)!= -1) ||
                                        (item.ManagerName.toLowerCase().indexOf(queryText)!= -1) ||
                                        (item.dead_date.toLowerCase().indexOf(queryText)!= -1) ||
                                        (item.description.toLowerCase().indexOf(queryText)!= -1)
                                    ){
                                        filteredApts.push(item);
                                    }
                                });

                                filteredApts = _.orderBy(filteredApts, function(item) {
                                    return item[orderBy].toLowerCase();
                                },orderDir);//orderBy

                                filteredApts = filteredApts.map(function(item, index) {
                                    return(
                                            <AptList key = { index }
                                                     singleItem = { item }
                                                     whichItem = { item }
                                                     onDelete = { this.deleteMessage } />

                                    )//return
                                }.bind(this));//filteredApts.map
                                return (
                                        <div className="interface">
                                            <AddAppointment
                                                    bodyVisible = { this.state.aptBodyVisible }
                                                    handleToggle = { this.toggleAddDisplay }
                                                    addApt = { this.addItem }
                                            />
                                            <SearchAppointments
                                                    orderBy = {this.state.orderBy}
                                                    orderDir = {this.state.orderDir}
                                                    onReOrder = {this.reOrder}
                                                    onSearch = {this.searchApts}
                                            />
                                            <ul className="item-list media-list">
                                                {filteredApts}
                                            </ul>
                                        </div>
                                )//return
                            }//render
                        });//MainInterface
                        var AptList = React.createClass({
                            handleDelete: function () {
                                this.props.onDelete(this.props.whichItem)
                            },
                          handleDetails: function () {
                            console.log(' Ia m here');
                            console.log(this.props.whichItem);
                          },
                            render: function() {
                                return(
                                        <li className="pet-item media">
                                            <div className="media-left">
                                                <button className="pet-delete btn btn-xs
                                                        btn-danger" onClick={this.handleDelete}>
                                                        <span className="glyphicon glyphicon-remove">

                                                        </span>

                                                </button>
                                            </div>
                                            <div className="pet-info media-body">
                                                <div className="pet-head">

                                                    <button className="pet-delete btn " onClick={this.handleDetails}>
                                                        <span className="glyphicon glyphicon-add"></span>
                                                    </button>
                                                    <span className="pet-name"  >{this.props.singleItem.title}</span>
                                                    <span className="apt-date pull-right">{this.props.singleItem.dead_date}</span>
                                                </div>
                                                <div className="owner-name">
                                                    <span className="label-item">Owner:</span>
                                                    {this.props.singleItem.ManagerName}
                                                </div>
                                                <div className="owner-name">
                                                    <span className="label-item">Project Github URL:</span>
                                                    {this.props.singleItem.URL}
                                                </div>
                                                <div className="apt-notes">{this.props.singleItem.description}
                                                </div>
                                            </div>
                                        </li>
                                )//return
                            }//render
                        });//AptList
                        var AddAppointment = React.createClass({
                            toggleAptDisplay: function () {
                                this.props.handleToggle();
                            },
                            handleAdd: function (e) {
                                var tempItem = {
                                    title: this.refs.inputtitle.value,
                                    //ManagerName: parseInt(this.refs.inputManagerName.value),
                                    manager_id: parseInt(this.refs.inputManagerName.value),
                                    URL: this.refs.inputURL.value,
                                    dead_date: this.refs.inputdead_date.value,
                                    description: this.refs.inputdescription.value,
                                    creation_date:this.refs.inputcreation_date.value
                                }//tempItem
                                e.preventDefault();
                                fetch('http://localhost:3000/projects', {
                                    method: 'POST',
                                    headers: {
                                        'Accept': 'application/json',
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify(tempItem)
                                })
                                var tempItemStr = JSON.stringify(tempItem)
                                console.log("string item "+tempItemStr);
                                this.props.addApt(tempItem);
                            },//handleAdd
                            render: function () {

                                var displayAptBody = {
                                    display: this.props.bodyVisible ? 'block': 'none'
                                }
                                return(
                                        <div className="panel panel-primary">
                                            <div className="panel-heading apt-addheading" onClick={ this.toggleAptDisplay }>
                                                <span className="glyphicon glyphicon-plus"></span> Add Project
                                            </div>
                                            <div className="panel-body" style={ displayAptBody }>
                                                <form className="add-appointment form-horizontal" onSubmit= { this.handleAdd }>
                                                    <div className="form-group">
                                                        <label className="col-sm-2 control-label" for="title">Project Name</label>
                                                        <div className="col-sm-10">
                                                            <input type="text" className="form-control"
                                                                   id="title" ref="inputtitle" placeholder="Project Name"/>
                                                        </div>
                                                    </div>
                                                    <div className="form-group">
                                                        <label className="col-sm-2 control-label" for="petOwner">Owner</label>
                                                        <div className="col-sm-10">
                                                            <input type="number" className="form-control"
                                                                   id="petOwner" ref="inputManagerName" placeholder="Owner's Name"/>
                                                        </div>
                                                    </div>
                                                    <div className="form-group">
                                                        <label className="col-sm-2 control-label" for="petOwner">Project GitHub URL</label>
                                                        <div className="col-sm-10">
                                                            <input type="text" className="form-control"
                                                                   id="URL" ref="inputURL" placeholder="URL"/>
                                                        </div>
                                                    </div>
                                                    <div className="form-group">
                                                        <label className="col-sm-2 control-label" for="creation_date">Start-Date</label>
                                                        <div className="col-sm-4">
                                                            <input type="date" className="form-control"
                                                                   id="creation_date" ref="inputcreation_date"/>
                                                        </div>
                                                        <label className="col-sm-2 control-label" for="dead_date">End-Date</label>
                                                        <div className="col-sm-4">
                                                            <input type="date" className="form-control"
                                                                   id="dead_date" ref="inputdead_date"/>
                                                        </div>

                                                    </div>
                                                    <div className="form-group">
                                                        <label className="col-sm-2 control-label" for="description">Notes</label>
                                                        <div className="col-sm-10">
                                                                <textarea className="form-control" rows="4" cols="50"
                                                                          id="description" ref="inputdescription" placeholder="Notes">

                                                                </textarea>
                                                        </div>
                                                    </div>
                                                    <div className="form-group">
                                                        <div className="col-sm-offset-2 col-sm-10" >
                                                            <button type="submit" className="btn btn-primary pull-right">Add Project</button>
                                                        </div>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                )//return
                            }//render
                        });//AddAppointment
                        var SearchAppointments = React.createClass({
                            handleSort: function (e) {
                                this.props.onReOrder(e.target.id, this.props.orderDir);
                            },//handleSort
                            handleOrder: function (e) {
                                this.props.onReOrder(this.props.orderBy, e.target.id);
                            },//handleOrder
                            handleSearch: function (e) {
                                this.props.onSearch(e.target.value);

                            },
                            render: function () {
                                return(
                                        <div className="row search-appointments">
                                            <div className="col-sm-offset-3 col-sm-6">
                                                <div className="input-group">
                                                    <input id="SearchApts" onChange={this.handleSearch} placeholder="Search" type="text" className="form-control" aria-label="Search Appointments" />
                                                    <div className="input-group-btn">
                                                        <button type="button" className="btn btn-primary dropdown-toggle"
                                                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Sort by: <span className="caret"></span></button>
                                                        <ul className="dropdown-menu dropdown-menu-right">
                                                            <li><a href="#" id="title" onClick={ this.handleSort }>Project Name{ (this.props.orderBy === 'title') ? <span className="glyphicon glyphicon-ok"></span>: null} </a></li>
                                                            <li><a href="#" id="dead_date" onClick={ this.handleSort }>Date { (this.props.orderBy === 'dead_date') ? <span className="glyphicon glyphicon-ok"></span>: null}</a></li>
                                                            <li><a href="#" id="ManagerName" onClick={ this.handleSort }>Owner { (this.props.orderBy === 'ManagerName') ? <span className="glyphicon glyphicon-ok"></span>: null }</a></li>
                                                            <li role="separator" className="divider"></li>
                                                            <li><a href="#" id="asc" onClick={ this.handleOrder }>Asc { (this.props.orderDir === 'asc') ? <span className="glyphicon glyphicon-ok"></span>: null } </a></li>
                                                            <li><a href="#" id="desc" onClick={ this.handleOrder }>Desc { (this.props.orderDir === 'desc') ? <span className="glyphicon glyphicon-ok"></span>: null }</a></li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                )//return
                            }//render
                        });//SearchAppointments

                        ReactDOM.render(
                                <MainInterface />,document.getElementById('petAppointments')
                        )
                    </script>
                </div>
            </div>
        </div>
    </div>
</div>
</body>
</html>